import Head from "next/head";

export default function Home() {
    return (
        <>
            <Head>
                <title>ReactJS-application dockerization guide</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta name="author" content="Устинов Дмитрий" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <div className="header">
                <div className="header__content">
                    <div className="header__title">
                        Докеризация ReactJS-приложения
                    </div>
                    <div className="header__benefit">
                        <b>Вместо часа</b> с лишним разбора английского видео{" "}
                        <b>несколько минут</b> выжимки на русском
                    </div>
                </div>
            </div>
            <div className="main">
                <div className="main__title">
                    Среднее время прочтения: 1,5 минуты
                </div>

                <div className="paragraph">
                    1. В терминале заходим в пустую созданную для нашего проекта
                    дерикторию. Там вводим:
                    <div className="monospace">npx create-react-app .</div>
                </div>
                <div className="paragraph paragraph_noCode">
                    2. Включаем Docker
                </div>
                <div className="paragraph">
                    3. Переходим в папку с приложением и создаём Dockerfile.prod
                    со следующей структурой:
                    <div className="monospace">
                        FROM node as build
                        <br />
                        WORKDIR /app
                        <br />
                        COPY package.json .<br />
                        RUN npm install
                        <br />
                        COPY . .<br />
                        ARG REACT_APP_NAME
                        <br />
                        ENV REACT_APP_NAME=$REACT_APP_NAME
                        <br />
                        RUN npm run build
                        <br />
                        <br />
                        FROM nginx
                        <br />
                        COPY --from=build /app/build /usr/share/nginx/html
                    </div>
                </div>
                <div className="paragraph">
                    4. Создаём рядом Dockerfile.dev со следующим содержимым:
                    <div className="monospace">
                        FROM node
                        <br />
                        WORKDIR /app
                        <br />
                        COPY package.json .<br />
                        RUN npm install
                        <br />
                        COPY . .<br />
                        ENV REACT_APP_NAME=myName
                        <br />
                        EXPOSE 3000
                        <br />
                        CMD ["npm", "start"]
                        <br />
                    </div>
                </div>
                <div className="paragraph">
                    5. Теперь по соседству делаем файл .env:
                    <div className="monospace">
                        CHOKIDAR_USEPOLLING=true
                        <br />
                        REACT_APP_NAME=greatdev
                    </div>
                </div>
                <div className="paragraph">
                    6. Аналогично - docker-compose-dev.yml:
                    <div className="monospace">
                        version: '3.8'
                        <br />
                        services:
                        <br />
                        react-app:
                        <br />
                        build:
                        <br />
                        context: .<br />
                        dockerfile: Dockerfile.dev
                        <br />
                        ports:
                        <br />
                        - "3000:3000"
                        <br />
                        volumes:
                        <br />
                        - ./src:/app/src
                        <br />
                        environment:
                        <br />
                        - REACT_APP_NAME=greatdev-dev
                        <br />- CHOKIDAR_USEPOLLING=true
                    </div>
                </div>
                <div className="paragraph">
                    7. Рядышком - docker-compose-prod.yml:
                    <div className="monospace">
                        version: '3.8'
                        <br />
                        services:
                        <br />
                        react-app:
                        <br />
                        build:
                        <br />
                        context: .<br />
                        dockerfile: Dockerfile.prod
                        <br />
                        args:
                        <br />
                        - REACT_APP_NAME=greatdev-prod
                        <br />
                        ports:
                        <br />- "8080:80"
                    </div>
                </div>
                <div className="paragraph">
                    8. Туда же - .dockerignore:
                    <div className="monospace">
                        node_modules
                        <br />
                        Dockerfile
                        <br />
                        .git
                        <br />
                        .gitignore
                        <br />
                        .dockerignore
                        <br />
                        .env
                    </div>
                </div>

                <div className="paragraph">
                    9. Теперь, для того чтобы посмотреть как будет в
                    prodakshen-режиме и как в режиме разработки, пропишем в
                    компоненте App.js:
                    <div className="monospace">
                        <p>{`Hello, ${process.env.REACT_APP_NAME}!`}</p>
                    </div>
                </div>

                <div className="paragraph">
                    10. Чтобы запустить приложение в докере, существует
                    несколько вариантов. Я опишу самый короткий. Он заключается
                    в том, чтобы использовать всего-лишь одну команду:
                    <br />
                    <br />- <b>в developer-режиме</b>:
                    <div className="command">
                        <div className="monospace">
                            <input
                                value="docker-compose -f docker-compose-dev.yml up -d --build"
                                readonly
                            />
                        </div>
                        <button onclick="copyCommand('9')">
                            <img src="https://clck.ru/r5L6U" />
                        </button>
                    </div>
                    <br />- <b>в production-режиме</b>:
                    <div className="command">
                        <div className="monospace">
                            docker-compose -f docker-compose-prod.yml up -d
                            --build
                        </div>
                        <button onclick="copyCommand('9')">
                            <img src="https://clck.ru/r5L6U" />
                        </button>
                    </div>
                </div>

                <div className="paragraph">
                    11. Ну и чтобы удалить контейнер, <br />
                    <br />- <b>в developer-режиме</b>:
                    <div className="monospace">
                        docker-compose -f docker-compose-dev.yml down
                    </div>
                    <br />- <b>в production-режиме</b>:
                    <div className="monospace">
                        docker-compose -f docker-compose-prod.yml down
                    </div>
                </div>
                <div className="paragraph">
                    12. Чтобы удалить образ, <br />
                    <br />- <b>в developer-режиме</b>:
                    <div className="monospace">docker rmi docker-image-dev</div>
                    <br />- <b>в production-режиме</b>:
                    <div className="monospace">
                        docker rmi docker-image-prod
                    </div>
                </div>

                <div className="main__source">
                    Источник:
                    <a href="https://clck.ru/r2VWw">
                        Тот самый видео-урок на английском
                    </a>
                </div>
            </div>
            <div className="footer">
                <div className="footer__signature">Устинов Дмитрий, 2022</div>
            </div>
        </>
    );
}
